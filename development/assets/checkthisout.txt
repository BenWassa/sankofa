import { useState } from 'react';
import { Sparkles, Atom, Users, BookOpen, Layers, Send, Loader2 } from 'lucide-react';

const colors = {
  text: '#2d3748',
  primary: '#d69e2e',
  secondary: '#fef3c7',
  background: '#fdfbf1',
  border: '#e5e7eb',
  shadow: 'rgba(0, 0, 0, 0.1)',
};

const commonCardStyles = `
  bg-white rounded-xl shadow-lg border border-gray-200 p-6 transition-all duration-300
  hover:shadow-xl hover:scale-105 transform
`;

const SynthesisMap = () => (
  <div className="flex flex-col items-center justify-center p-8 w-full h-full max-w-4xl mx-auto">
    <h2 className="text-3xl font-cinzel text-center text-primary mb-8 leading-tight">Synthesis Map: Patterns, Tensions, & Gaps</h2>
    <div className="relative w-full aspect-square md:w-[700px] md:h-[700px]">
      <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[80%] h-[80%] rounded-full border border-dashed border-gray-400 opacity-50"></div>
      <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[60%] h-[60%] rounded-full border border-dashed border-gray-400 opacity-50"></div>

      {/* Tensions */}
      <div className={`absolute top-[10%] left-[20%] z-10 ${commonCardStyles} bg-red-50`}>
        <div className="text-center">
          <h3 className="text-lg font-spectral font-bold text-red-700">Tension: Individual vs. Collective</h3>
          <p className="text-sm text-gray-600 mt-2">The friction between personal fulfillment and community needs.</p>
        </div>
      </div>
      <div className={`absolute bottom-[10%] right-[15%] z-10 ${commonCardStyles} bg-red-50`}>
        <div className="text-center">
          <h3 className="text-lg font-spectral font-bold text-red-700">Tension: Story vs. Science</h3>
          <p className="text-sm text-gray-600 mt-2">Balancing mythic narrative with empirical rigor.</p>
        </div>
      </div>
      
      {/* Patterns */}
      <div className={`absolute top-[35%] right-[5%] z-10 ${commonCardStyles} bg-green-50`}>
        <div className="text-center">
          <h3 className="text-lg font-spectral font-bold text-green-700">Pattern: Dopamine Traps</h3>
          <p className="text-sm text-gray-600 mt-2">The impact of tech on attention and meaning-making.</p>
        </div>
      </div>
      <div className={`absolute bottom-[30%] left-[5%] z-10 ${commonCardStyles} bg-green-50`}>
        <div className="text-center">
          <h3 className="text-lg font-spectral font-bold text-green-700">Pattern: Youth Disconnect</h3>
          <p className="text-sm text-gray-600 mt-2">A generation feeling lost and without purpose.</p>
        </div>
      </div>

      {/* Gaps */}
      <div className={`absolute bottom-[10%] left-[20%] z-10 ${commonCardStyles} bg-blue-50`}>
        <div className="text-center">
          <h3 className="text-lg font-spectral font-bold text-blue-700">Evidence Gap: Implementation</h3>
          <p className="text-sm text-gray-600 mt-2">The challenge of turning research into practical, lived solutions.</p>
        </div>
      </div>
      <div className={`absolute top-[15%] right-[10%] z-10 ${commonCardStyles} bg-blue-50`}>
        <div className="text-center">
          <h3 className="text-lg font-spectral font-bold text-blue-700">Evidence Gap: Cross-Cultural Data</h3>
          <p className="text-sm text-gray-600 mt-2">The need for broader, non-Western research on the crisis.</p>
        </div>
      </div>

    </div>
    <p className="text-center font-ebgaramond text-gray-700 mt-8 max-w-xl">
      This map visualizes the complex relationships between the key patterns and tensions discovered in our 7-part research, highlighting critical evidence gaps for future work.
    </p>
  </div>
);

const MeaningFramework = () => (
  <div className="flex flex-col items-center justify-center p-8 w-full h-full max-w-4xl mx-auto">
    <h2 className="text-3xl font-cinzel text-center text-primary mb-8 leading-tight">Meaning Framework: Ancient Wisdom Meets Modern Coherence</h2>
    <div className="relative w-full aspect-square flex items-center justify-center">
      
      {/* Wisdom Integrator Core */}
      <div className="relative z-20 flex flex-col items-center justify-center w-[50%] h-[50%] bg-primary rounded-full shadow-lg p-4 text-center">
        <Sparkles className="h-10 w-10 text-white" />
        <h3 className="mt-2 text-xl font-cinzel text-white">The Wisdom Integrator</h3>
        <p className="text-sm font-spectral text-white opacity-90 mt-1">Ancient & Modern Coherence</p>
      </div>
      
      {/* Outer Layer: Modern Psychology */}
      <div className="absolute z-10 flex items-center justify-center w-[90%] h-[90%] bg-gray-100 rounded-full border-4 border-dashed border-gray-300 p-8">
        <div className="absolute top-8 left-8 flex items-center p-2 rounded-xl bg-white shadow">
          <Atom className="w-6 h-6 text-gray-600 mr-2" />
          <p className="text-sm font-spectral text-gray-700">Cognitive Science</p>
        </div>
        <div className="absolute top-1/2 left-0 transform -translate-x-1/2 -translate-y-1/2 flex items-center p-2 rounded-xl bg-white shadow">
          <Layers className="w-6 h-6 text-gray-600 mr-2" />
          <p className="text-sm font-spectral text-gray-700">Neuroscience</p>
        </div>
        <div className="absolute bottom-8 right-8 flex items-center p-2 rounded-xl bg-white shadow">
          <Users className="w-6 h-6 text-gray-600 mr-2" />
          <p className="text-sm font-spectral text-gray-700">Humanistic Psychology</p>
        </div>
      </div>

      {/* Inner Layer: Ancient Wisdom */}
      <div className="absolute z-0 flex items-center justify-center w-[70%] h-[70%] bg-white rounded-full border-2 border-gray-200">
        <div className="absolute top-1/4 left-1/4 transform -translate-x-1/2 -translate-y-1/2 flex items-center p-2 rounded-xl bg-secondary shadow">
          <BookOpen className="w-6 h-6 text-primary mr-2" />
          <p className="text-sm font-spectral text-gray-700">Myth & Archetype</p>
        </div>
        <div className="absolute bottom-1/4 right-1/4 transform translate-x-1/2 translate-y-1/2 flex items-center p-2 rounded-xl bg-secondary shadow">
          <BookOpen className="w-6 h-6 text-primary mr-2" />
          <p className="text-sm font-spectral text-gray-700">Ritual & Practice</p>
        </div>
      </div>

    </div>
    <p className="text-center font-ebgaramond text-gray-700 mt-8 max-w-xl">
      This framework visualizes how core concepts from ancient wisdom traditions can be integrated with findings from modern psychology to create a new, coherent, and accessible path to meaning.
    </p>
  </div>
);

const MythicStoryteller = () => {
  const [userInput, setUserInput] = useState('');
  const [storyOutput, setStoryOutput] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  
  const generateStory = async () => {
    setIsLoading(true);
    setStoryOutput('');

    const prompt = `You are a wise and ancient storyteller from a mythic time. Your task is to take a modern challenge and reframe it as a part of a mythic journey. You must use the concepts of the three archetypes below in your story. Do not mention the archetype names directly. Instead, weave their principles into the narrative, guiding the user towards a solution.

    The three archetypes are:
    1. The Inner Architect: Self-meaning and personal narrative construction.
    2. The Community Weaver: Rebuilding social bonds and collective purpose.
    3. The Wisdom Integrator: Ancient wisdom meets modern coherence.

    The modern challenge is: "${userInput}"

    Draft a short, compelling mythic story of 1-3 paragraphs in the second person (e.g., "You find yourself at a crossroads...").`;

    try {
      const chatHistory = [];
      chatHistory.push({ role: "user", parts: [{ text: prompt }] });
      const payload = { contents: chatHistory };
      const apiKey = "";
      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      const result = await response.json();
      if (result.candidates && result.candidates.length > 0 &&
          result.candidates[0].content && result.candidates[0].content.parts &&
          result.candidates[0].content.parts.length > 0) {
        const text = result.candidates[0].content.parts[0].text;
        setStoryOutput(text);
      } else {
        setStoryOutput("The words of the oracle are faint. Please try again later.");
      }
    } catch (error) {
      console.error("Error calling Gemini API:", error);
      setStoryOutput("The great narrative is temporarily lost. The winds of fate are not in our favor.");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center p-8 w-full h-full max-w-4xl mx-auto">
      <h2 className="text-3xl font-cinzel text-center text-primary mb-8 leading-tight">Your Mythic Story âœ¨</h2>
      <p className="text-center font-ebgaramond text-gray-700 mb-6 max-w-xl">
        Enter a personal challenge you are facing, and the oracle will weave a short narrative from the threads of ancient wisdom and modern psychology to guide you on your journey.
      </p>
      
      <div className="w-full flex flex-col items-center space-y-4">
        <textarea
          className="w-full h-32 p-4 rounded-xl border-2 border-gray-300 font-spectral focus:outline-none focus:ring-2 focus:ring-primary transition-colors duration-200"
          placeholder="e.g., 'I feel disconnected from my friends,' or 'I'm not sure what to do with my career.'"
          value={userInput}
          onChange={(e) => setUserInput(e.target.value)}
        />
        <button
          onClick={generateStory}
          className="flex items-center justify-center px-6 py-3 bg-primary text-white font-cinzel text-xl rounded-xl shadow-md transition-all duration-300 hover:bg-yellow-700 hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed"
          disabled={isLoading || !userInput.trim()}
        >
          {isLoading ? (
            <>
              <Loader2 className="h-6 w-6 animate-spin mr-2" />
              Weaving...
            </>
          ) : (
            <>
              Weave My Story
              <Send className="w-5 h-5 ml-2" />
            </>
          )}
        </button>
      </div>

      {storyOutput && (
        <div className="w-full mt-8 p-6 bg-white rounded-xl shadow-lg border border-gray-200">
          <p className="font-ebgaramond text-gray-800 leading-relaxed whitespace-pre-wrap">{storyOutput}</p>
        </div>
      )}
    </div>
  );
};

export default function App() {
  const [activeVisual, setActiveVisual] = useState('synthesis');

  const navItemClass = (visualName) => `
    cursor-pointer px-4 py-2 font-cinzel text-xl rounded-xl transition-colors duration-300
    ${activeVisual === visualName
      ? 'bg-primary text-white shadow-md'
      : 'text-gray-700 hover:bg-gray-100'
    }
  `;

  return (
    <div className="min-h-screen bg-background text-text font-garamond p-4 md:p-8">
      <div className="flex flex-col items-center">
        <div className="flex justify-center items-center space-x-4 mb-12 flex-wrap">
          <button
            onClick={() => setActiveVisual('synthesis')}
            className={navItemClass('synthesis')}
          >
            Synthesis Map
          </button>
          <button
            onClick={() => setActiveVisual('meaning')}
            className={navItemClass('meaning')}
          >
            Meaning Framework
          </button>
          <button
            onClick={() => setActiveVisual('storyteller')}
            className={navItemClass('storyteller')}
          >
            Mythic Storyteller âœ¨
          </button>
        </div>
        <div className="w-full flex justify-center items-center min-h-[600px] md:min-h-[800px] p-4">
          {activeVisual === 'synthesis' && <SynthesisMap />}
          {activeVisual === 'meaning' && <MeaningFramework />}
          {activeVisual === 'storyteller' && <MythicStoryteller />}
        </div>
      </div>
    </div>
  );
}
